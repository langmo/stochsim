cmdl_Input 'IDENTIFIER'
cmdl_Reduce [statements ::=], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'ASSIGN'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'ASSIGN', go to state 17
cmdl_Return. Stack=[statements variable ASSIGN]
cmdl_Input 'VALUE'
cmdl_Shift 'VALUE'
cmdl_Return. Stack=[statements variable ASSIGN VALUE]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [expression ::= VALUE], go to state 17.
cmdl_Shift 'expression', go to state 60
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable ASSIGN expression SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [assignment ::= variable ASSIGN expression SEMICOLON], go to state 1.
cmdl_Shift 'assignment'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'ASSIGN'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'ASSIGN', go to state 17
cmdl_Return. Stack=[statements variable ASSIGN]
cmdl_Input 'VALUE'
cmdl_Shift 'VALUE'
cmdl_Return. Stack=[statements variable ASSIGN VALUE]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [expression ::= VALUE], go to state 17.
cmdl_Shift 'expression', go to state 60
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable ASSIGN expression SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [assignment ::= variable ASSIGN expression SEMICOLON], go to state 1.
cmdl_Shift 'assignment'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'ASSIGN'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'ASSIGN', go to state 17
cmdl_Return. Stack=[statements variable ASSIGN]
cmdl_Input 'VALUE'
cmdl_Shift 'VALUE'
cmdl_Return. Stack=[statements variable ASSIGN VALUE]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [expression ::= VALUE], go to state 17.
cmdl_Shift 'expression', go to state 60
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable ASSIGN expression SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [assignment ::= variable ASSIGN expression SEMICOLON], go to state 1.
cmdl_Shift 'assignment'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'ASSIGN'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'ASSIGN', go to state 17
cmdl_Return. Stack=[statements variable ASSIGN]
cmdl_Input 'VALUE'
cmdl_Shift 'VALUE'
cmdl_Return. Stack=[statements variable ASSIGN VALUE]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [expression ::= VALUE], go to state 17.
cmdl_Shift 'expression', go to state 60
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable ASSIGN expression SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [assignment ::= variable ASSIGN expression SEMICOLON], go to state 1.
cmdl_Shift 'assignment'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'ASSIGN'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'ASSIGN', go to state 17
cmdl_Return. Stack=[statements variable ASSIGN]
cmdl_Input 'VALUE'
cmdl_Shift 'VALUE'
cmdl_Return. Stack=[statements variable ASSIGN VALUE]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [expression ::= VALUE], go to state 17.
cmdl_Shift 'expression', go to state 60
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable ASSIGN expression SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [assignment ::= variable ASSIGN expression SEMICOLON], go to state 1.
cmdl_Shift 'assignment'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'ASSIGN'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'ASSIGN', go to state 17
cmdl_Return. Stack=[statements variable ASSIGN]
cmdl_Input 'VALUE'
cmdl_Shift 'VALUE'
cmdl_Return. Stack=[statements variable ASSIGN VALUE]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [expression ::= VALUE], go to state 17.
cmdl_Shift 'expression', go to state 60
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable ASSIGN expression SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [assignment ::= variable ASSIGN expression SEMICOLON], go to state 1.
cmdl_Shift 'assignment'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'ASSIGN'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'ASSIGN', go to state 17
cmdl_Return. Stack=[statements variable ASSIGN]
cmdl_Input 'VALUE'
cmdl_Shift 'VALUE'
cmdl_Return. Stack=[statements variable ASSIGN VALUE]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [expression ::= VALUE], go to state 17.
cmdl_Shift 'expression', go to state 60
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable ASSIGN expression SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [assignment ::= variable ASSIGN expression SEMICOLON], go to state 1.
cmdl_Shift 'assignment'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'ASSIGN'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'ASSIGN', go to state 17
cmdl_Return. Stack=[statements variable ASSIGN]
cmdl_Input 'VALUE'
cmdl_Shift 'VALUE'
cmdl_Return. Stack=[statements variable ASSIGN VALUE]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [expression ::= VALUE], go to state 17.
cmdl_Shift 'expression', go to state 60
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable ASSIGN expression SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [assignment ::= variable ASSIGN expression SEMICOLON], go to state 1.
cmdl_Shift 'assignment'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'ASSIGN'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'ASSIGN', go to state 17
cmdl_Return. Stack=[statements variable ASSIGN]
cmdl_Input 'VALUE'
cmdl_Shift 'VALUE'
cmdl_Return. Stack=[statements variable ASSIGN VALUE]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [expression ::= VALUE], go to state 17.
cmdl_Shift 'expression', go to state 60
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable ASSIGN expression SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [assignment ::= variable ASSIGN expression SEMICOLON], go to state 1.
cmdl_Shift 'assignment'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'ASSIGN'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'ASSIGN', go to state 17
cmdl_Return. Stack=[statements variable ASSIGN]
cmdl_Input 'VALUE'
cmdl_Shift 'VALUE'
cmdl_Return. Stack=[statements variable ASSIGN VALUE]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [expression ::= VALUE], go to state 17.
cmdl_Shift 'expression', go to state 60
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable ASSIGN expression SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [assignment ::= variable ASSIGN expression SEMICOLON], go to state 1.
cmdl_Shift 'assignment'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'ASSIGN'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'ASSIGN', go to state 17
cmdl_Return. Stack=[statements variable ASSIGN]
cmdl_Input 'VALUE'
cmdl_Shift 'VALUE'
cmdl_Return. Stack=[statements variable ASSIGN VALUE]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [expression ::= VALUE], go to state 17.
cmdl_Shift 'expression', go to state 60
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable ASSIGN expression SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [assignment ::= variable ASSIGN expression SEMICOLON], go to state 1.
cmdl_Shift 'assignment'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'ASSIGN'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'ASSIGN', go to state 17
cmdl_Return. Stack=[statements variable ASSIGN]
cmdl_Input 'VALUE'
cmdl_Shift 'VALUE'
cmdl_Return. Stack=[statements variable ASSIGN VALUE]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [expression ::= VALUE], go to state 17.
cmdl_Shift 'expression', go to state 60
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable ASSIGN expression SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [assignment ::= variable ASSIGN expression SEMICOLON], go to state 1.
cmdl_Shift 'assignment'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'ASSIGN'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'ASSIGN', go to state 17
cmdl_Return. Stack=[statements variable ASSIGN]
cmdl_Input 'VALUE'
cmdl_Shift 'VALUE'
cmdl_Return. Stack=[statements variable ASSIGN VALUE]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [expression ::= VALUE], go to state 17.
cmdl_Shift 'expression', go to state 60
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable ASSIGN expression SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [assignment ::= variable ASSIGN expression SEMICOLON], go to state 1.
cmdl_Shift 'assignment'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'ASSIGN'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'ASSIGN', go to state 17
cmdl_Return. Stack=[statements variable ASSIGN]
cmdl_Input 'VALUE'
cmdl_Shift 'VALUE'
cmdl_Return. Stack=[statements variable ASSIGN VALUE]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [expression ::= VALUE], go to state 17.
cmdl_Shift 'expression', go to state 60
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable ASSIGN expression SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [assignment ::= variable ASSIGN expression SEMICOLON], go to state 1.
cmdl_Shift 'assignment'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'ASSIGN'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'ASSIGN', go to state 17
cmdl_Return. Stack=[statements variable ASSIGN]
cmdl_Input 'VALUE'
cmdl_Shift 'VALUE'
cmdl_Return. Stack=[statements variable ASSIGN VALUE]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [expression ::= VALUE], go to state 17.
cmdl_Shift 'expression', go to state 60
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable ASSIGN expression SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [assignment ::= variable ASSIGN expression SEMICOLON], go to state 1.
cmdl_Shift 'assignment'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'ASSIGN'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'ASSIGN', go to state 17
cmdl_Return. Stack=[statements variable ASSIGN]
cmdl_Input 'VALUE'
cmdl_Shift 'VALUE'
cmdl_Return. Stack=[statements variable ASSIGN VALUE]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [expression ::= VALUE], go to state 17.
cmdl_Shift 'expression', go to state 60
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable ASSIGN expression SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [assignment ::= variable ASSIGN expression SEMICOLON], go to state 1.
cmdl_Shift 'assignment'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'ASSIGN'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'ASSIGN', go to state 17
cmdl_Return. Stack=[statements variable ASSIGN]
cmdl_Input 'VALUE'
cmdl_Shift 'VALUE'
cmdl_Return. Stack=[statements variable ASSIGN VALUE]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [expression ::= VALUE], go to state 17.
cmdl_Shift 'expression', go to state 60
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable ASSIGN expression SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [assignment ::= variable ASSIGN expression SEMICOLON], go to state 1.
cmdl_Shift 'assignment'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'ASSIGN'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'ASSIGN', go to state 17
cmdl_Return. Stack=[statements variable ASSIGN]
cmdl_Input 'VALUE'
cmdl_Shift 'VALUE'
cmdl_Return. Stack=[statements variable ASSIGN VALUE]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [expression ::= VALUE], go to state 17.
cmdl_Shift 'expression', go to state 60
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable ASSIGN expression SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [assignment ::= variable ASSIGN expression SEMICOLON], go to state 1.
cmdl_Shift 'assignment'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'ASSIGN'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'ASSIGN', go to state 17
cmdl_Return. Stack=[statements variable ASSIGN]
cmdl_Input 'VALUE'
cmdl_Shift 'VALUE'
cmdl_Return. Stack=[statements variable ASSIGN VALUE]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [expression ::= VALUE], go to state 17.
cmdl_Shift 'expression', go to state 60
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable ASSIGN expression SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [assignment ::= variable ASSIGN expression SEMICOLON], go to state 1.
cmdl_Shift 'assignment'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'ASSIGN'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'ASSIGN', go to state 17
cmdl_Return. Stack=[statements variable ASSIGN]
cmdl_Input 'VALUE'
cmdl_Shift 'VALUE'
cmdl_Return. Stack=[statements variable ASSIGN VALUE]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [expression ::= VALUE], go to state 17.
cmdl_Shift 'expression', go to state 60
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable ASSIGN expression SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [assignment ::= variable ASSIGN expression SEMICOLON], go to state 1.
cmdl_Shift 'assignment'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'ASSIGN'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'ASSIGN', go to state 17
cmdl_Return. Stack=[statements variable ASSIGN]
cmdl_Input 'VALUE'
cmdl_Shift 'VALUE'
cmdl_Return. Stack=[statements variable ASSIGN VALUE]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [expression ::= VALUE], go to state 17.
cmdl_Shift 'expression', go to state 60
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable ASSIGN expression SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [assignment ::= variable ASSIGN expression SEMICOLON], go to state 1.
cmdl_Shift 'assignment'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'ASSIGN'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'ASSIGN', go to state 17
cmdl_Return. Stack=[statements variable ASSIGN]
cmdl_Input 'VALUE'
cmdl_Shift 'VALUE'
cmdl_Return. Stack=[statements variable ASSIGN VALUE]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [expression ::= VALUE], go to state 17.
cmdl_Shift 'expression', go to state 60
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable ASSIGN expression SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [assignment ::= variable ASSIGN expression SEMICOLON], go to state 1.
cmdl_Shift 'assignment'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'ASSIGN'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'ASSIGN', go to state 17
cmdl_Return. Stack=[statements variable ASSIGN]
cmdl_Input 'VALUE'
cmdl_Shift 'VALUE'
cmdl_Return. Stack=[statements variable ASSIGN VALUE]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [expression ::= VALUE], go to state 17.
cmdl_Shift 'expression', go to state 60
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable ASSIGN expression SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [assignment ::= variable ASSIGN expression SEMICOLON], go to state 1.
cmdl_Shift 'assignment'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'ASSIGN'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'ASSIGN', go to state 17
cmdl_Return. Stack=[statements variable ASSIGN]
cmdl_Input 'VALUE'
cmdl_Shift 'VALUE'
cmdl_Return. Stack=[statements variable ASSIGN VALUE]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [expression ::= VALUE], go to state 17.
cmdl_Shift 'expression', go to state 60
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable ASSIGN expression SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [assignment ::= variable ASSIGN expression SEMICOLON], go to state 1.
cmdl_Shift 'assignment'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'ASSIGN'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'ASSIGN', go to state 17
cmdl_Return. Stack=[statements variable ASSIGN]
cmdl_Input 'VALUE'
cmdl_Shift 'VALUE'
cmdl_Return. Stack=[statements variable ASSIGN VALUE]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [expression ::= VALUE], go to state 17.
cmdl_Shift 'expression', go to state 60
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable ASSIGN expression SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [assignment ::= variable ASSIGN expression SEMICOLON], go to state 1.
cmdl_Shift 'assignment'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'ASSIGN'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'ASSIGN', go to state 17
cmdl_Return. Stack=[statements variable ASSIGN]
cmdl_Input 'VALUE'
cmdl_Shift 'VALUE'
cmdl_Return. Stack=[statements variable ASSIGN VALUE]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [expression ::= VALUE], go to state 17.
cmdl_Shift 'expression', go to state 60
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable ASSIGN expression SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [assignment ::= variable ASSIGN expression SEMICOLON], go to state 1.
cmdl_Shift 'assignment'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'ASSIGN'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'ASSIGN', go to state 17
cmdl_Return. Stack=[statements variable ASSIGN]
cmdl_Input 'VALUE'
cmdl_Shift 'VALUE'
cmdl_Return. Stack=[statements variable ASSIGN VALUE]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [expression ::= VALUE], go to state 17.
cmdl_Shift 'expression', go to state 60
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable ASSIGN expression SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [assignment ::= variable ASSIGN expression SEMICOLON], go to state 1.
cmdl_Shift 'assignment'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'COMMA', go to state 8
cmdl_Return. Stack=[statements variable COMMA]
cmdl_Input 'ARROW'
cmdl_Reduce [reactionLeftSide ::=], go to state 8.
cmdl_Shift 'reactionLeftSide', go to state 105
cmdl_Shift 'ARROW', go to state 5
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 5.
cmdl_Shift 'variable', go to state 87
cmdl_Reduce [reactionRightComponent ::= variable], go to state 5.
cmdl_Shift 'reactionRightComponent'
cmdl_Reduce [reactionRightSide ::= reactionRightComponent], go to state 5.
cmdl_Shift 'reactionRightSide', go to state 100
cmdl_Shift 'COMMA', go to state 7
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA]
cmdl_Input 'LEFT_SQUARE'
cmdl_Shift 'LEFT_SQUARE', go to state 18
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA LEFT_SQUARE]
cmdl_Input 'VALUE'
cmdl_Shift 'VALUE'
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA LEFT_SQUARE VALUE]
cmdl_Input 'MULTIPLY'
cmdl_Reduce [expression ::= VALUE], go to state 18.
cmdl_Shift 'expression', go to state 57
cmdl_Shift 'MULTIPLY', go to state 44
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA LEFT_SQUARE expression MULTIPLY]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA LEFT_SQUARE expression MULTIPLY IDENTIFIER]
cmdl_Input 'LEFT_ROUND'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 44.
cmdl_Shift 'variable', go to state 124
cmdl_Shift 'LEFT_ROUND', go to state 16
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA LEFT_SQUARE expression MULTIPLY variable LEFT_ROUND]
cmdl_Input 'MINUS'
cmdl_Shift 'MINUS', go to state 28
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA LEFT_SQUARE expression MULTIPLY variable LEFT_ROUND MINUS]
cmdl_Input 'VALUE'
cmdl_Shift 'VALUE'
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA LEFT_SQUARE expression MULTIPLY variable LEFT_ROUND MINUS VALUE]
cmdl_Input 'MULTIPLY'
cmdl_Reduce [expression ::= VALUE], go to state 28.
cmdl_Shift 'expression', go to state 118
cmdl_Reduce [expression ::= MINUS expression], go to state 16.
cmdl_Shift 'expression', go to state 72
cmdl_Shift 'MULTIPLY', go to state 44
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA LEFT_SQUARE expression MULTIPLY variable LEFT_ROUND expression MULTIPLY]
cmdl_Input 'LEFT_ROUND'
cmdl_Shift 'LEFT_ROUND', go to state 47
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA LEFT_SQUARE expression MULTIPLY variable LEFT_ROUND expression MULTIPLY LEFT_ROUND]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA LEFT_SQUARE expression MULTIPLY variable LEFT_ROUND expression MULTIPLY LEFT_ROUND IDENTIFIER]
cmdl_Input 'MINUS'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 47.
cmdl_Shift 'variable', go to state 124
cmdl_Reduce [expression ::= variable], go to state 47.
cmdl_Shift 'expression', go to state 62
cmdl_Shift 'MINUS', go to state 45
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA LEFT_SQUARE expression MULTIPLY variable LEFT_ROUND expression MULTIPLY LEFT_ROUND expression MINUS]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA LEFT_SQUARE expression MULTIPLY variable LEFT_ROUND expression MULTIPLY LEFT_ROUND expression MINUS IDENTIFIER]
cmdl_Input 'RIGHT_ROUND'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 45.
cmdl_Shift 'variable', go to state 124
cmdl_Reduce [expression ::= variable], go to state 45.
cmdl_Shift 'expression', go to state 93
cmdl_Reduce [sum ::= expression MINUS expression], go to state 47.
cmdl_Shift 'sum'
cmdl_Reduce [expression ::= sum], go to state 47.
cmdl_Shift 'expression', go to state 62
cmdl_Shift 'RIGHT_ROUND'
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA LEFT_SQUARE expression MULTIPLY variable LEFT_ROUND expression MULTIPLY LEFT_ROUND expression RIGHT_ROUND]
cmdl_Input 'DIVIDE'
cmdl_Reduce [expression ::= LEFT_ROUND expression RIGHT_ROUND], go to state 44.
cmdl_Shift 'expression', go to state 123
cmdl_Reduce [product ::= expression MULTIPLY expression], go to state 16.
cmdl_Shift 'product'
cmdl_Reduce [expression ::= product], go to state 16.
cmdl_Shift 'expression', go to state 72
cmdl_Shift 'DIVIDE', go to state 43
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA LEFT_SQUARE expression MULTIPLY variable LEFT_ROUND expression DIVIDE]
cmdl_Input 'LEFT_ROUND'
cmdl_Shift 'LEFT_ROUND', go to state 47
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA LEFT_SQUARE expression MULTIPLY variable LEFT_ROUND expression DIVIDE LEFT_ROUND]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA LEFT_SQUARE expression MULTIPLY variable LEFT_ROUND expression DIVIDE LEFT_ROUND IDENTIFIER]
cmdl_Input 'MINUS'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 47.
cmdl_Shift 'variable', go to state 124
cmdl_Reduce [expression ::= variable], go to state 47.
cmdl_Shift 'expression', go to state 62
cmdl_Shift 'MINUS', go to state 45
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA LEFT_SQUARE expression MULTIPLY variable LEFT_ROUND expression DIVIDE LEFT_ROUND expression MINUS]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA LEFT_SQUARE expression MULTIPLY variable LEFT_ROUND expression DIVIDE LEFT_ROUND expression MINUS IDENTIFIER]
cmdl_Input 'RIGHT_ROUND'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 45.
cmdl_Shift 'variable', go to state 124
cmdl_Reduce [expression ::= variable], go to state 45.
cmdl_Shift 'expression', go to state 93
cmdl_Reduce [sum ::= expression MINUS expression], go to state 47.
cmdl_Shift 'sum'
cmdl_Reduce [expression ::= sum], go to state 47.
cmdl_Shift 'expression', go to state 62
cmdl_Shift 'RIGHT_ROUND'
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA LEFT_SQUARE expression MULTIPLY variable LEFT_ROUND expression DIVIDE LEFT_ROUND expression RIGHT_ROUND]
cmdl_Input 'RIGHT_ROUND'
cmdl_Reduce [expression ::= LEFT_ROUND expression RIGHT_ROUND], go to state 43.
cmdl_Shift 'expression', go to state 122
cmdl_Reduce [product ::= expression DIVIDE expression], go to state 16.
cmdl_Shift 'product'
cmdl_Reduce [expression ::= product], go to state 16.
cmdl_Shift 'expression', go to state 72
cmdl_Reduce [arguments ::= expression], go to state 16.
cmdl_Shift 'arguments', go to state 108
cmdl_Shift 'RIGHT_ROUND'
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA LEFT_SQUARE expression MULTIPLY variable LEFT_ROUND arguments RIGHT_ROUND]
cmdl_Input 'RIGHT_SQUARE'
cmdl_Reduce [expression ::= variable LEFT_ROUND arguments RIGHT_ROUND], go to state 44.
cmdl_Shift 'expression', go to state 123
cmdl_Reduce [product ::= expression MULTIPLY expression], go to state 18.
cmdl_Shift 'product'
cmdl_Reduce [expression ::= product], go to state 18.
cmdl_Shift 'expression', go to state 57
cmdl_Shift 'RIGHT_SQUARE'
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA LEFT_SQUARE expression RIGHT_SQUARE]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [reactionSpecifier ::= LEFT_SQUARE expression RIGHT_SQUARE], go to state 7.
cmdl_Shift 'reactionSpecifier'
cmdl_Reduce [reactionSpecifiers ::= reactionSpecifier], go to state 7.
cmdl_Shift 'reactionSpecifiers', go to state 98
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [reaction ::= variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON], go to state 1.
cmdl_Shift 'reaction'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'COMMA', go to state 8
cmdl_Return. Stack=[statements variable COMMA]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA IDENTIFIER]
cmdl_Input 'ARROW'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 8.
cmdl_Shift 'variable', go to state 90
cmdl_Reduce [reactionLeftComponent ::= variable], go to state 8.
cmdl_Shift 'reactionLeftComponent'
cmdl_Reduce [reactionLeftSide ::= reactionLeftComponent], go to state 8.
cmdl_Shift 'reactionLeftSide', go to state 105
cmdl_Shift 'ARROW', go to state 5
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW]
cmdl_Input 'COMMA'
cmdl_Reduce [reactionRightSide ::=], go to state 5.
cmdl_Shift 'reactionRightSide', go to state 100
cmdl_Shift 'COMMA', go to state 7
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA]
cmdl_Input 'VALUE'
cmdl_Shift 'VALUE'
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA VALUE]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [expression ::= VALUE], go to state 7.
cmdl_Shift 'expression', go to state 64
cmdl_Reduce [reactionSpecifier ::= expression], go to state 7.
cmdl_Shift 'reactionSpecifier'
cmdl_Reduce [reactionSpecifiers ::= reactionSpecifier], go to state 7.
cmdl_Shift 'reactionSpecifiers', go to state 98
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [reaction ::= variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON], go to state 1.
cmdl_Shift 'reaction'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'COMMA', go to state 8
cmdl_Return. Stack=[statements variable COMMA]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA IDENTIFIER]
cmdl_Input 'PLUS'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 8.
cmdl_Shift 'variable', go to state 90
cmdl_Reduce [reactionLeftComponent ::= variable], go to state 8.
cmdl_Shift 'reactionLeftComponent'
cmdl_Reduce [reactionLeftSide ::= reactionLeftComponent], go to state 8.
cmdl_Shift 'reactionLeftSide', go to state 105
cmdl_Shift 'PLUS', go to state 11
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide PLUS]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide PLUS IDENTIFIER]
cmdl_Input 'ARROW'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 11.
cmdl_Shift 'variable', go to state 90
cmdl_Reduce [reactionLeftComponent ::= variable], go to state 11.
cmdl_Shift 'reactionLeftComponent'
cmdl_Reduce [reactionLeftSide ::= reactionLeftSide PLUS reactionLeftComponent], go to state 8.
cmdl_Shift 'reactionLeftSide', go to state 105
cmdl_Shift 'ARROW', go to state 5
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 5.
cmdl_Shift 'variable', go to state 87
cmdl_Reduce [reactionRightComponent ::= variable], go to state 5.
cmdl_Shift 'reactionRightComponent'
cmdl_Reduce [reactionRightSide ::= reactionRightComponent], go to state 5.
cmdl_Shift 'reactionRightSide', go to state 100
cmdl_Shift 'COMMA', go to state 7
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA IDENTIFIER]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 7.
cmdl_Shift 'variable', go to state 99
cmdl_Reduce [expression ::= variable], go to state 7.
cmdl_Shift 'expression', go to state 64
cmdl_Reduce [reactionSpecifier ::= expression], go to state 7.
cmdl_Shift 'reactionSpecifier'
cmdl_Reduce [reactionSpecifiers ::= reactionSpecifier], go to state 7.
cmdl_Shift 'reactionSpecifiers', go to state 98
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [reaction ::= variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON], go to state 1.
cmdl_Shift 'reaction'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'COMMA', go to state 8
cmdl_Return. Stack=[statements variable COMMA]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA IDENTIFIER]
cmdl_Input 'ARROW'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 8.
cmdl_Shift 'variable', go to state 90
cmdl_Reduce [reactionLeftComponent ::= variable], go to state 8.
cmdl_Shift 'reactionLeftComponent'
cmdl_Reduce [reactionLeftSide ::= reactionLeftComponent], go to state 8.
cmdl_Shift 'reactionLeftSide', go to state 105
cmdl_Shift 'ARROW', go to state 5
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW IDENTIFIER]
cmdl_Input 'PLUS'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 5.
cmdl_Shift 'variable', go to state 87
cmdl_Reduce [reactionRightComponent ::= variable], go to state 5.
cmdl_Shift 'reactionRightComponent'
cmdl_Reduce [reactionRightSide ::= reactionRightComponent], go to state 5.
cmdl_Shift 'reactionRightSide', go to state 100
cmdl_Shift 'PLUS', go to state 9
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide PLUS]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide PLUS IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 9.
cmdl_Shift 'variable', go to state 87
cmdl_Reduce [reactionRightComponent ::= variable], go to state 9.
cmdl_Shift 'reactionRightComponent'
cmdl_Reduce [reactionRightSide ::= reactionRightSide PLUS reactionRightComponent], go to state 5.
cmdl_Shift 'reactionRightSide', go to state 100
cmdl_Shift 'COMMA', go to state 7
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA IDENTIFIER]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 7.
cmdl_Shift 'variable', go to state 99
cmdl_Reduce [expression ::= variable], go to state 7.
cmdl_Shift 'expression', go to state 64
cmdl_Reduce [reactionSpecifier ::= expression], go to state 7.
cmdl_Shift 'reactionSpecifier'
cmdl_Reduce [reactionSpecifiers ::= reactionSpecifier], go to state 7.
cmdl_Shift 'reactionSpecifiers', go to state 98
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [reaction ::= variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON], go to state 1.
cmdl_Shift 'reaction'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'COMMA', go to state 8
cmdl_Return. Stack=[statements variable COMMA]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA IDENTIFIER]
cmdl_Input 'PLUS'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 8.
cmdl_Shift 'variable', go to state 90
cmdl_Reduce [reactionLeftComponent ::= variable], go to state 8.
cmdl_Shift 'reactionLeftComponent'
cmdl_Reduce [reactionLeftSide ::= reactionLeftComponent], go to state 8.
cmdl_Shift 'reactionLeftSide', go to state 105
cmdl_Shift 'PLUS', go to state 11
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide PLUS]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide PLUS IDENTIFIER]
cmdl_Input 'ARROW'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 11.
cmdl_Shift 'variable', go to state 90
cmdl_Reduce [reactionLeftComponent ::= variable], go to state 11.
cmdl_Shift 'reactionLeftComponent'
cmdl_Reduce [reactionLeftSide ::= reactionLeftSide PLUS reactionLeftComponent], go to state 8.
cmdl_Shift 'reactionLeftSide', go to state 105
cmdl_Shift 'ARROW', go to state 5
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 5.
cmdl_Shift 'variable', go to state 87
cmdl_Reduce [reactionRightComponent ::= variable], go to state 5.
cmdl_Shift 'reactionRightComponent'
cmdl_Reduce [reactionRightSide ::= reactionRightComponent], go to state 5.
cmdl_Shift 'reactionRightSide', go to state 100
cmdl_Shift 'COMMA', go to state 7
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA IDENTIFIER]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 7.
cmdl_Shift 'variable', go to state 99
cmdl_Reduce [expression ::= variable], go to state 7.
cmdl_Shift 'expression', go to state 64
cmdl_Reduce [reactionSpecifier ::= expression], go to state 7.
cmdl_Shift 'reactionSpecifier'
cmdl_Reduce [reactionSpecifiers ::= reactionSpecifier], go to state 7.
cmdl_Shift 'reactionSpecifiers', go to state 98
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [reaction ::= variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON], go to state 1.
cmdl_Shift 'reaction'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'COMMA', go to state 8
cmdl_Return. Stack=[statements variable COMMA]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA IDENTIFIER]
cmdl_Input 'ARROW'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 8.
cmdl_Shift 'variable', go to state 90
cmdl_Reduce [reactionLeftComponent ::= variable], go to state 8.
cmdl_Shift 'reactionLeftComponent'
cmdl_Reduce [reactionLeftSide ::= reactionLeftComponent], go to state 8.
cmdl_Shift 'reactionLeftSide', go to state 105
cmdl_Shift 'ARROW', go to state 5
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW IDENTIFIER]
cmdl_Input 'PLUS'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 5.
cmdl_Shift 'variable', go to state 87
cmdl_Reduce [reactionRightComponent ::= variable], go to state 5.
cmdl_Shift 'reactionRightComponent'
cmdl_Reduce [reactionRightSide ::= reactionRightComponent], go to state 5.
cmdl_Shift 'reactionRightSide', go to state 100
cmdl_Shift 'PLUS', go to state 9
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide PLUS]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide PLUS IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 9.
cmdl_Shift 'variable', go to state 87
cmdl_Reduce [reactionRightComponent ::= variable], go to state 9.
cmdl_Shift 'reactionRightComponent'
cmdl_Reduce [reactionRightSide ::= reactionRightSide PLUS reactionRightComponent], go to state 5.
cmdl_Shift 'reactionRightSide', go to state 100
cmdl_Shift 'COMMA', go to state 7
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA IDENTIFIER]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 7.
cmdl_Shift 'variable', go to state 99
cmdl_Reduce [expression ::= variable], go to state 7.
cmdl_Shift 'expression', go to state 64
cmdl_Reduce [reactionSpecifier ::= expression], go to state 7.
cmdl_Shift 'reactionSpecifier'
cmdl_Reduce [reactionSpecifiers ::= reactionSpecifier], go to state 7.
cmdl_Shift 'reactionSpecifiers', go to state 98
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [reaction ::= variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON], go to state 1.
cmdl_Shift 'reaction'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'COMMA', go to state 8
cmdl_Return. Stack=[statements variable COMMA]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA IDENTIFIER]
cmdl_Input 'PLUS'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 8.
cmdl_Shift 'variable', go to state 90
cmdl_Reduce [reactionLeftComponent ::= variable], go to state 8.
cmdl_Shift 'reactionLeftComponent'
cmdl_Reduce [reactionLeftSide ::= reactionLeftComponent], go to state 8.
cmdl_Shift 'reactionLeftSide', go to state 105
cmdl_Shift 'PLUS', go to state 11
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide PLUS]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide PLUS IDENTIFIER]
cmdl_Input 'ARROW'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 11.
cmdl_Shift 'variable', go to state 90
cmdl_Reduce [reactionLeftComponent ::= variable], go to state 11.
cmdl_Shift 'reactionLeftComponent'
cmdl_Reduce [reactionLeftSide ::= reactionLeftSide PLUS reactionLeftComponent], go to state 8.
cmdl_Shift 'reactionLeftSide', go to state 105
cmdl_Shift 'ARROW', go to state 5
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 5.
cmdl_Shift 'variable', go to state 87
cmdl_Reduce [reactionRightComponent ::= variable], go to state 5.
cmdl_Shift 'reactionRightComponent'
cmdl_Reduce [reactionRightSide ::= reactionRightComponent], go to state 5.
cmdl_Shift 'reactionRightSide', go to state 100
cmdl_Shift 'COMMA', go to state 7
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA IDENTIFIER]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 7.
cmdl_Shift 'variable', go to state 99
cmdl_Reduce [expression ::= variable], go to state 7.
cmdl_Shift 'expression', go to state 64
cmdl_Reduce [reactionSpecifier ::= expression], go to state 7.
cmdl_Shift 'reactionSpecifier'
cmdl_Reduce [reactionSpecifiers ::= reactionSpecifier], go to state 7.
cmdl_Shift 'reactionSpecifiers', go to state 98
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [reaction ::= variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON], go to state 1.
cmdl_Shift 'reaction'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'COMMA', go to state 8
cmdl_Return. Stack=[statements variable COMMA]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA IDENTIFIER]
cmdl_Input 'ARROW'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 8.
cmdl_Shift 'variable', go to state 90
cmdl_Reduce [reactionLeftComponent ::= variable], go to state 8.
cmdl_Shift 'reactionLeftComponent'
cmdl_Reduce [reactionLeftSide ::= reactionLeftComponent], go to state 8.
cmdl_Shift 'reactionLeftSide', go to state 105
cmdl_Shift 'ARROW', go to state 5
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW IDENTIFIER]
cmdl_Input 'PLUS'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 5.
cmdl_Shift 'variable', go to state 87
cmdl_Reduce [reactionRightComponent ::= variable], go to state 5.
cmdl_Shift 'reactionRightComponent'
cmdl_Reduce [reactionRightSide ::= reactionRightComponent], go to state 5.
cmdl_Shift 'reactionRightSide', go to state 100
cmdl_Shift 'PLUS', go to state 9
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide PLUS]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide PLUS IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 9.
cmdl_Shift 'variable', go to state 87
cmdl_Reduce [reactionRightComponent ::= variable], go to state 9.
cmdl_Shift 'reactionRightComponent'
cmdl_Reduce [reactionRightSide ::= reactionRightSide PLUS reactionRightComponent], go to state 5.
cmdl_Shift 'reactionRightSide', go to state 100
cmdl_Shift 'COMMA', go to state 7
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA IDENTIFIER]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 7.
cmdl_Shift 'variable', go to state 99
cmdl_Reduce [expression ::= variable], go to state 7.
cmdl_Shift 'expression', go to state 64
cmdl_Reduce [reactionSpecifier ::= expression], go to state 7.
cmdl_Shift 'reactionSpecifier'
cmdl_Reduce [reactionSpecifiers ::= reactionSpecifier], go to state 7.
cmdl_Shift 'reactionSpecifiers', go to state 98
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [reaction ::= variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON], go to state 1.
cmdl_Shift 'reaction'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'COMMA', go to state 8
cmdl_Return. Stack=[statements variable COMMA]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA IDENTIFIER]
cmdl_Input 'PLUS'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 8.
cmdl_Shift 'variable', go to state 90
cmdl_Reduce [reactionLeftComponent ::= variable], go to state 8.
cmdl_Shift 'reactionLeftComponent'
cmdl_Reduce [reactionLeftSide ::= reactionLeftComponent], go to state 8.
cmdl_Shift 'reactionLeftSide', go to state 105
cmdl_Shift 'PLUS', go to state 11
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide PLUS]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide PLUS IDENTIFIER]
cmdl_Input 'ARROW'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 11.
cmdl_Shift 'variable', go to state 90
cmdl_Reduce [reactionLeftComponent ::= variable], go to state 11.
cmdl_Shift 'reactionLeftComponent'
cmdl_Reduce [reactionLeftSide ::= reactionLeftSide PLUS reactionLeftComponent], go to state 8.
cmdl_Shift 'reactionLeftSide', go to state 105
cmdl_Shift 'ARROW', go to state 5
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 5.
cmdl_Shift 'variable', go to state 87
cmdl_Reduce [reactionRightComponent ::= variable], go to state 5.
cmdl_Shift 'reactionRightComponent'
cmdl_Reduce [reactionRightSide ::= reactionRightComponent], go to state 5.
cmdl_Shift 'reactionRightSide', go to state 100
cmdl_Shift 'COMMA', go to state 7
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA IDENTIFIER]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 7.
cmdl_Shift 'variable', go to state 99
cmdl_Reduce [expression ::= variable], go to state 7.
cmdl_Shift 'expression', go to state 64
cmdl_Reduce [reactionSpecifier ::= expression], go to state 7.
cmdl_Shift 'reactionSpecifier'
cmdl_Reduce [reactionSpecifiers ::= reactionSpecifier], go to state 7.
cmdl_Shift 'reactionSpecifiers', go to state 98
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [reaction ::= variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON], go to state 1.
cmdl_Shift 'reaction'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'COMMA', go to state 8
cmdl_Return. Stack=[statements variable COMMA]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA IDENTIFIER]
cmdl_Input 'ARROW'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 8.
cmdl_Shift 'variable', go to state 90
cmdl_Reduce [reactionLeftComponent ::= variable], go to state 8.
cmdl_Shift 'reactionLeftComponent'
cmdl_Reduce [reactionLeftSide ::= reactionLeftComponent], go to state 8.
cmdl_Shift 'reactionLeftSide', go to state 105
cmdl_Shift 'ARROW', go to state 5
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW IDENTIFIER]
cmdl_Input 'PLUS'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 5.
cmdl_Shift 'variable', go to state 87
cmdl_Reduce [reactionRightComponent ::= variable], go to state 5.
cmdl_Shift 'reactionRightComponent'
cmdl_Reduce [reactionRightSide ::= reactionRightComponent], go to state 5.
cmdl_Shift 'reactionRightSide', go to state 100
cmdl_Shift 'PLUS', go to state 9
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide PLUS]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide PLUS IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 9.
cmdl_Shift 'variable', go to state 87
cmdl_Reduce [reactionRightComponent ::= variable], go to state 9.
cmdl_Shift 'reactionRightComponent'
cmdl_Reduce [reactionRightSide ::= reactionRightSide PLUS reactionRightComponent], go to state 5.
cmdl_Shift 'reactionRightSide', go to state 100
cmdl_Shift 'COMMA', go to state 7
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA IDENTIFIER]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 7.
cmdl_Shift 'variable', go to state 99
cmdl_Reduce [expression ::= variable], go to state 7.
cmdl_Shift 'expression', go to state 64
cmdl_Reduce [reactionSpecifier ::= expression], go to state 7.
cmdl_Shift 'reactionSpecifier'
cmdl_Reduce [reactionSpecifiers ::= reactionSpecifier], go to state 7.
cmdl_Shift 'reactionSpecifiers', go to state 98
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [reaction ::= variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON], go to state 1.
cmdl_Shift 'reaction'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'COMMA', go to state 8
cmdl_Return. Stack=[statements variable COMMA]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA IDENTIFIER]
cmdl_Input 'PLUS'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 8.
cmdl_Shift 'variable', go to state 90
cmdl_Reduce [reactionLeftComponent ::= variable], go to state 8.
cmdl_Shift 'reactionLeftComponent'
cmdl_Reduce [reactionLeftSide ::= reactionLeftComponent], go to state 8.
cmdl_Shift 'reactionLeftSide', go to state 105
cmdl_Shift 'PLUS', go to state 11
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide PLUS]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide PLUS IDENTIFIER]
cmdl_Input 'ARROW'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 11.
cmdl_Shift 'variable', go to state 90
cmdl_Reduce [reactionLeftComponent ::= variable], go to state 11.
cmdl_Shift 'reactionLeftComponent'
cmdl_Reduce [reactionLeftSide ::= reactionLeftSide PLUS reactionLeftComponent], go to state 8.
cmdl_Shift 'reactionLeftSide', go to state 105
cmdl_Shift 'ARROW', go to state 5
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 5.
cmdl_Shift 'variable', go to state 87
cmdl_Reduce [reactionRightComponent ::= variable], go to state 5.
cmdl_Shift 'reactionRightComponent'
cmdl_Reduce [reactionRightSide ::= reactionRightComponent], go to state 5.
cmdl_Shift 'reactionRightSide', go to state 100
cmdl_Shift 'COMMA', go to state 7
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA IDENTIFIER]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 7.
cmdl_Shift 'variable', go to state 99
cmdl_Reduce [expression ::= variable], go to state 7.
cmdl_Shift 'expression', go to state 64
cmdl_Reduce [reactionSpecifier ::= expression], go to state 7.
cmdl_Shift 'reactionSpecifier'
cmdl_Reduce [reactionSpecifiers ::= reactionSpecifier], go to state 7.
cmdl_Shift 'reactionSpecifiers', go to state 98
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [reaction ::= variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON], go to state 1.
cmdl_Shift 'reaction'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'COMMA', go to state 8
cmdl_Return. Stack=[statements variable COMMA]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA IDENTIFIER]
cmdl_Input 'ARROW'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 8.
cmdl_Shift 'variable', go to state 90
cmdl_Reduce [reactionLeftComponent ::= variable], go to state 8.
cmdl_Shift 'reactionLeftComponent'
cmdl_Reduce [reactionLeftSide ::= reactionLeftComponent], go to state 8.
cmdl_Shift 'reactionLeftSide', go to state 105
cmdl_Shift 'ARROW', go to state 5
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW IDENTIFIER]
cmdl_Input 'PLUS'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 5.
cmdl_Shift 'variable', go to state 87
cmdl_Reduce [reactionRightComponent ::= variable], go to state 5.
cmdl_Shift 'reactionRightComponent'
cmdl_Reduce [reactionRightSide ::= reactionRightComponent], go to state 5.
cmdl_Shift 'reactionRightSide', go to state 100
cmdl_Shift 'PLUS', go to state 9
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide PLUS]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide PLUS IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 9.
cmdl_Shift 'variable', go to state 87
cmdl_Reduce [reactionRightComponent ::= variable], go to state 9.
cmdl_Shift 'reactionRightComponent'
cmdl_Reduce [reactionRightSide ::= reactionRightSide PLUS reactionRightComponent], go to state 5.
cmdl_Shift 'reactionRightSide', go to state 100
cmdl_Shift 'COMMA', go to state 7
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA IDENTIFIER]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 7.
cmdl_Shift 'variable', go to state 99
cmdl_Reduce [expression ::= variable], go to state 7.
cmdl_Shift 'expression', go to state 64
cmdl_Reduce [reactionSpecifier ::= expression], go to state 7.
cmdl_Shift 'reactionSpecifier'
cmdl_Reduce [reactionSpecifiers ::= reactionSpecifier], go to state 7.
cmdl_Shift 'reactionSpecifiers', go to state 98
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [reaction ::= variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON], go to state 1.
cmdl_Shift 'reaction'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'COMMA', go to state 8
cmdl_Return. Stack=[statements variable COMMA]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA IDENTIFIER]
cmdl_Input 'PLUS'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 8.
cmdl_Shift 'variable', go to state 90
cmdl_Reduce [reactionLeftComponent ::= variable], go to state 8.
cmdl_Shift 'reactionLeftComponent'
cmdl_Reduce [reactionLeftSide ::= reactionLeftComponent], go to state 8.
cmdl_Shift 'reactionLeftSide', go to state 105
cmdl_Shift 'PLUS', go to state 11
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide PLUS]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide PLUS IDENTIFIER]
cmdl_Input 'ARROW'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 11.
cmdl_Shift 'variable', go to state 90
cmdl_Reduce [reactionLeftComponent ::= variable], go to state 11.
cmdl_Shift 'reactionLeftComponent'
cmdl_Reduce [reactionLeftSide ::= reactionLeftSide PLUS reactionLeftComponent], go to state 8.
cmdl_Shift 'reactionLeftSide', go to state 105
cmdl_Shift 'ARROW', go to state 5
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 5.
cmdl_Shift 'variable', go to state 87
cmdl_Reduce [reactionRightComponent ::= variable], go to state 5.
cmdl_Shift 'reactionRightComponent'
cmdl_Reduce [reactionRightSide ::= reactionRightComponent], go to state 5.
cmdl_Shift 'reactionRightSide', go to state 100
cmdl_Shift 'COMMA', go to state 7
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA IDENTIFIER]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 7.
cmdl_Shift 'variable', go to state 99
cmdl_Reduce [expression ::= variable], go to state 7.
cmdl_Shift 'expression', go to state 64
cmdl_Reduce [reactionSpecifier ::= expression], go to state 7.
cmdl_Shift 'reactionSpecifier'
cmdl_Reduce [reactionSpecifiers ::= reactionSpecifier], go to state 7.
cmdl_Shift 'reactionSpecifiers', go to state 98
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [reaction ::= variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON], go to state 1.
cmdl_Shift 'reaction'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'COMMA', go to state 8
cmdl_Return. Stack=[statements variable COMMA]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA IDENTIFIER]
cmdl_Input 'ARROW'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 8.
cmdl_Shift 'variable', go to state 90
cmdl_Reduce [reactionLeftComponent ::= variable], go to state 8.
cmdl_Shift 'reactionLeftComponent'
cmdl_Reduce [reactionLeftSide ::= reactionLeftComponent], go to state 8.
cmdl_Shift 'reactionLeftSide', go to state 105
cmdl_Shift 'ARROW', go to state 5
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW IDENTIFIER]
cmdl_Input 'PLUS'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 5.
cmdl_Shift 'variable', go to state 87
cmdl_Reduce [reactionRightComponent ::= variable], go to state 5.
cmdl_Shift 'reactionRightComponent'
cmdl_Reduce [reactionRightSide ::= reactionRightComponent], go to state 5.
cmdl_Shift 'reactionRightSide', go to state 100
cmdl_Shift 'PLUS', go to state 9
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide PLUS]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide PLUS IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 9.
cmdl_Shift 'variable', go to state 87
cmdl_Reduce [reactionRightComponent ::= variable], go to state 9.
cmdl_Shift 'reactionRightComponent'
cmdl_Reduce [reactionRightSide ::= reactionRightSide PLUS reactionRightComponent], go to state 5.
cmdl_Shift 'reactionRightSide', go to state 100
cmdl_Shift 'COMMA', go to state 7
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA IDENTIFIER]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 7.
cmdl_Shift 'variable', go to state 99
cmdl_Reduce [expression ::= variable], go to state 7.
cmdl_Shift 'expression', go to state 64
cmdl_Reduce [reactionSpecifier ::= expression], go to state 7.
cmdl_Shift 'reactionSpecifier'
cmdl_Reduce [reactionSpecifiers ::= reactionSpecifier], go to state 7.
cmdl_Shift 'reactionSpecifiers', go to state 98
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [reaction ::= variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON], go to state 1.
cmdl_Shift 'reaction'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'COMMA', go to state 8
cmdl_Return. Stack=[statements variable COMMA]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA IDENTIFIER]
cmdl_Input 'PLUS'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 8.
cmdl_Shift 'variable', go to state 90
cmdl_Reduce [reactionLeftComponent ::= variable], go to state 8.
cmdl_Shift 'reactionLeftComponent'
cmdl_Reduce [reactionLeftSide ::= reactionLeftComponent], go to state 8.
cmdl_Shift 'reactionLeftSide', go to state 105
cmdl_Shift 'PLUS', go to state 11
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide PLUS]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide PLUS IDENTIFIER]
cmdl_Input 'ARROW'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 11.
cmdl_Shift 'variable', go to state 90
cmdl_Reduce [reactionLeftComponent ::= variable], go to state 11.
cmdl_Shift 'reactionLeftComponent'
cmdl_Reduce [reactionLeftSide ::= reactionLeftSide PLUS reactionLeftComponent], go to state 8.
cmdl_Shift 'reactionLeftSide', go to state 105
cmdl_Shift 'ARROW', go to state 5
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 5.
cmdl_Shift 'variable', go to state 87
cmdl_Reduce [reactionRightComponent ::= variable], go to state 5.
cmdl_Shift 'reactionRightComponent'
cmdl_Reduce [reactionRightSide ::= reactionRightComponent], go to state 5.
cmdl_Shift 'reactionRightSide', go to state 100
cmdl_Shift 'COMMA', go to state 7
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA IDENTIFIER]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 7.
cmdl_Shift 'variable', go to state 99
cmdl_Reduce [expression ::= variable], go to state 7.
cmdl_Shift 'expression', go to state 64
cmdl_Reduce [reactionSpecifier ::= expression], go to state 7.
cmdl_Shift 'reactionSpecifier'
cmdl_Reduce [reactionSpecifiers ::= reactionSpecifier], go to state 7.
cmdl_Shift 'reactionSpecifiers', go to state 98
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [reaction ::= variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON], go to state 1.
cmdl_Shift 'reaction'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'COMMA', go to state 8
cmdl_Return. Stack=[statements variable COMMA]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA IDENTIFIER]
cmdl_Input 'ARROW'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 8.
cmdl_Shift 'variable', go to state 90
cmdl_Reduce [reactionLeftComponent ::= variable], go to state 8.
cmdl_Shift 'reactionLeftComponent'
cmdl_Reduce [reactionLeftSide ::= reactionLeftComponent], go to state 8.
cmdl_Shift 'reactionLeftSide', go to state 105
cmdl_Shift 'ARROW', go to state 5
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW IDENTIFIER]
cmdl_Input 'PLUS'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 5.
cmdl_Shift 'variable', go to state 87
cmdl_Reduce [reactionRightComponent ::= variable], go to state 5.
cmdl_Shift 'reactionRightComponent'
cmdl_Reduce [reactionRightSide ::= reactionRightComponent], go to state 5.
cmdl_Shift 'reactionRightSide', go to state 100
cmdl_Shift 'PLUS', go to state 9
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide PLUS]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide PLUS IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 9.
cmdl_Shift 'variable', go to state 87
cmdl_Reduce [reactionRightComponent ::= variable], go to state 9.
cmdl_Shift 'reactionRightComponent'
cmdl_Reduce [reactionRightSide ::= reactionRightSide PLUS reactionRightComponent], go to state 5.
cmdl_Shift 'reactionRightSide', go to state 100
cmdl_Shift 'COMMA', go to state 7
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA IDENTIFIER]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 7.
cmdl_Shift 'variable', go to state 99
cmdl_Reduce [expression ::= variable], go to state 7.
cmdl_Shift 'expression', go to state 64
cmdl_Reduce [reactionSpecifier ::= expression], go to state 7.
cmdl_Shift 'reactionSpecifier'
cmdl_Reduce [reactionSpecifiers ::= reactionSpecifier], go to state 7.
cmdl_Shift 'reactionSpecifiers', go to state 98
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [reaction ::= variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON], go to state 1.
cmdl_Shift 'reaction'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'COMMA', go to state 8
cmdl_Return. Stack=[statements variable COMMA]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA IDENTIFIER]
cmdl_Input 'ARROW'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 8.
cmdl_Shift 'variable', go to state 90
cmdl_Reduce [reactionLeftComponent ::= variable], go to state 8.
cmdl_Shift 'reactionLeftComponent'
cmdl_Reduce [reactionLeftSide ::= reactionLeftComponent], go to state 8.
cmdl_Shift 'reactionLeftSide', go to state 105
cmdl_Shift 'ARROW', go to state 5
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW IDENTIFIER]
cmdl_Input 'PLUS'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 5.
cmdl_Shift 'variable', go to state 87
cmdl_Reduce [reactionRightComponent ::= variable], go to state 5.
cmdl_Shift 'reactionRightComponent'
cmdl_Reduce [reactionRightSide ::= reactionRightComponent], go to state 5.
cmdl_Shift 'reactionRightSide', go to state 100
cmdl_Shift 'PLUS', go to state 9
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide PLUS]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide PLUS IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 9.
cmdl_Shift 'variable', go to state 87
cmdl_Reduce [reactionRightComponent ::= variable], go to state 9.
cmdl_Shift 'reactionRightComponent'
cmdl_Reduce [reactionRightSide ::= reactionRightSide PLUS reactionRightComponent], go to state 5.
cmdl_Shift 'reactionRightSide', go to state 100
cmdl_Shift 'COMMA', go to state 7
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA IDENTIFIER]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 7.
cmdl_Shift 'variable', go to state 99
cmdl_Reduce [expression ::= variable], go to state 7.
cmdl_Shift 'expression', go to state 64
cmdl_Reduce [reactionSpecifier ::= expression], go to state 7.
cmdl_Shift 'reactionSpecifier'
cmdl_Reduce [reactionSpecifiers ::= reactionSpecifier], go to state 7.
cmdl_Shift 'reactionSpecifiers', go to state 98
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [reaction ::= variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON], go to state 1.
cmdl_Shift 'reaction'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'COMMA', go to state 8
cmdl_Return. Stack=[statements variable COMMA]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA IDENTIFIER]
cmdl_Input 'ARROW'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 8.
cmdl_Shift 'variable', go to state 90
cmdl_Reduce [reactionLeftComponent ::= variable], go to state 8.
cmdl_Shift 'reactionLeftComponent'
cmdl_Reduce [reactionLeftSide ::= reactionLeftComponent], go to state 8.
cmdl_Shift 'reactionLeftSide', go to state 105
cmdl_Shift 'ARROW', go to state 5
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW IDENTIFIER]
cmdl_Input 'PLUS'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 5.
cmdl_Shift 'variable', go to state 87
cmdl_Reduce [reactionRightComponent ::= variable], go to state 5.
cmdl_Shift 'reactionRightComponent'
cmdl_Reduce [reactionRightSide ::= reactionRightComponent], go to state 5.
cmdl_Shift 'reactionRightSide', go to state 100
cmdl_Shift 'PLUS', go to state 9
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide PLUS]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide PLUS IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 9.
cmdl_Shift 'variable', go to state 87
cmdl_Reduce [reactionRightComponent ::= variable], go to state 9.
cmdl_Shift 'reactionRightComponent'
cmdl_Reduce [reactionRightSide ::= reactionRightSide PLUS reactionRightComponent], go to state 5.
cmdl_Shift 'reactionRightSide', go to state 100
cmdl_Shift 'COMMA', go to state 7
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA IDENTIFIER]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 7.
cmdl_Shift 'variable', go to state 99
cmdl_Reduce [expression ::= variable], go to state 7.
cmdl_Shift 'expression', go to state 64
cmdl_Reduce [reactionSpecifier ::= expression], go to state 7.
cmdl_Shift 'reactionSpecifier'
cmdl_Reduce [reactionSpecifiers ::= reactionSpecifier], go to state 7.
cmdl_Shift 'reactionSpecifiers', go to state 98
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [reaction ::= variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON], go to state 1.
cmdl_Shift 'reaction'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'COMMA', go to state 8
cmdl_Return. Stack=[statements variable COMMA]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA IDENTIFIER]
cmdl_Input 'PLUS'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 8.
cmdl_Shift 'variable', go to state 90
cmdl_Reduce [reactionLeftComponent ::= variable], go to state 8.
cmdl_Shift 'reactionLeftComponent'
cmdl_Reduce [reactionLeftSide ::= reactionLeftComponent], go to state 8.
cmdl_Shift 'reactionLeftSide', go to state 105
cmdl_Shift 'PLUS', go to state 11
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide PLUS]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide PLUS IDENTIFIER]
cmdl_Input 'ARROW'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 11.
cmdl_Shift 'variable', go to state 90
cmdl_Reduce [reactionLeftComponent ::= variable], go to state 11.
cmdl_Shift 'reactionLeftComponent'
cmdl_Reduce [reactionLeftSide ::= reactionLeftSide PLUS reactionLeftComponent], go to state 8.
cmdl_Shift 'reactionLeftSide', go to state 105
cmdl_Shift 'ARROW', go to state 5
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW IDENTIFIER]
cmdl_Input 'PLUS'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 5.
cmdl_Shift 'variable', go to state 87
cmdl_Reduce [reactionRightComponent ::= variable], go to state 5.
cmdl_Shift 'reactionRightComponent'
cmdl_Reduce [reactionRightSide ::= reactionRightComponent], go to state 5.
cmdl_Shift 'reactionRightSide', go to state 100
cmdl_Shift 'PLUS', go to state 9
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide PLUS]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide PLUS IDENTIFIER]
cmdl_Input 'PLUS'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 9.
cmdl_Shift 'variable', go to state 87
cmdl_Reduce [reactionRightComponent ::= variable], go to state 9.
cmdl_Shift 'reactionRightComponent'
cmdl_Reduce [reactionRightSide ::= reactionRightSide PLUS reactionRightComponent], go to state 5.
cmdl_Shift 'reactionRightSide', go to state 100
cmdl_Shift 'PLUS', go to state 9
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide PLUS]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide PLUS IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 9.
cmdl_Shift 'variable', go to state 87
cmdl_Reduce [reactionRightComponent ::= variable], go to state 9.
cmdl_Shift 'reactionRightComponent'
cmdl_Reduce [reactionRightSide ::= reactionRightSide PLUS reactionRightComponent], go to state 5.
cmdl_Shift 'reactionRightSide', go to state 100
cmdl_Shift 'COMMA', go to state 7
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA IDENTIFIER]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 7.
cmdl_Shift 'variable', go to state 99
cmdl_Reduce [expression ::= variable], go to state 7.
cmdl_Shift 'expression', go to state 64
cmdl_Reduce [reactionSpecifier ::= expression], go to state 7.
cmdl_Shift 'reactionSpecifier'
cmdl_Reduce [reactionSpecifiers ::= reactionSpecifier], go to state 7.
cmdl_Shift 'reactionSpecifiers', go to state 98
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [reaction ::= variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON], go to state 1.
cmdl_Shift 'reaction'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'COMMA', go to state 8
cmdl_Return. Stack=[statements variable COMMA]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA IDENTIFIER]
cmdl_Input 'ARROW'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 8.
cmdl_Shift 'variable', go to state 90
cmdl_Reduce [reactionLeftComponent ::= variable], go to state 8.
cmdl_Shift 'reactionLeftComponent'
cmdl_Reduce [reactionLeftSide ::= reactionLeftComponent], go to state 8.
cmdl_Shift 'reactionLeftSide', go to state 105
cmdl_Shift 'ARROW', go to state 5
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 5.
cmdl_Shift 'variable', go to state 87
cmdl_Reduce [reactionRightComponent ::= variable], go to state 5.
cmdl_Shift 'reactionRightComponent'
cmdl_Reduce [reactionRightSide ::= reactionRightComponent], go to state 5.
cmdl_Shift 'reactionRightSide', go to state 100
cmdl_Shift 'COMMA', go to state 7
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA IDENTIFIER]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 7.
cmdl_Shift 'variable', go to state 99
cmdl_Reduce [expression ::= variable], go to state 7.
cmdl_Shift 'expression', go to state 64
cmdl_Reduce [reactionSpecifier ::= expression], go to state 7.
cmdl_Shift 'reactionSpecifier'
cmdl_Reduce [reactionSpecifiers ::= reactionSpecifier], go to state 7.
cmdl_Shift 'reactionSpecifiers', go to state 98
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [reaction ::= variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON], go to state 1.
cmdl_Shift 'reaction'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'COMMA', go to state 8
cmdl_Return. Stack=[statements variable COMMA]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA IDENTIFIER]
cmdl_Input 'ARROW'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 8.
cmdl_Shift 'variable', go to state 90
cmdl_Reduce [reactionLeftComponent ::= variable], go to state 8.
cmdl_Shift 'reactionLeftComponent'
cmdl_Reduce [reactionLeftSide ::= reactionLeftComponent], go to state 8.
cmdl_Shift 'reactionLeftSide', go to state 105
cmdl_Shift 'ARROW', go to state 5
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 5.
cmdl_Shift 'variable', go to state 87
cmdl_Reduce [reactionRightComponent ::= variable], go to state 5.
cmdl_Shift 'reactionRightComponent'
cmdl_Reduce [reactionRightSide ::= reactionRightComponent], go to state 5.
cmdl_Shift 'reactionRightSide', go to state 100
cmdl_Shift 'COMMA', go to state 7
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA]
cmdl_Input 'VALUE'
cmdl_Shift 'VALUE'
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA VALUE]
cmdl_Input 'MULTIPLY'
cmdl_Reduce [expression ::= VALUE], go to state 7.
cmdl_Shift 'expression', go to state 64
cmdl_Shift 'MULTIPLY', go to state 44
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA expression MULTIPLY]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA expression MULTIPLY IDENTIFIER]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 44.
cmdl_Shift 'variable', go to state 124
cmdl_Reduce [expression ::= variable], go to state 44.
cmdl_Shift 'expression', go to state 123
cmdl_Reduce [product ::= expression MULTIPLY expression], go to state 7.
cmdl_Shift 'product'
cmdl_Reduce [expression ::= product], go to state 7.
cmdl_Shift 'expression', go to state 64
cmdl_Reduce [reactionSpecifier ::= expression], go to state 7.
cmdl_Shift 'reactionSpecifier'
cmdl_Reduce [reactionSpecifiers ::= reactionSpecifier], go to state 7.
cmdl_Shift 'reactionSpecifiers', go to state 98
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [reaction ::= variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON], go to state 1.
cmdl_Shift 'reaction'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'COMMA', go to state 8
cmdl_Return. Stack=[statements variable COMMA]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA IDENTIFIER]
cmdl_Input 'ARROW'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 8.
cmdl_Shift 'variable', go to state 90
cmdl_Reduce [reactionLeftComponent ::= variable], go to state 8.
cmdl_Shift 'reactionLeftComponent'
cmdl_Reduce [reactionLeftSide ::= reactionLeftComponent], go to state 8.
cmdl_Shift 'reactionLeftSide', go to state 105
cmdl_Shift 'ARROW', go to state 5
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 5.
cmdl_Shift 'variable', go to state 87
cmdl_Reduce [reactionRightComponent ::= variable], go to state 5.
cmdl_Shift 'reactionRightComponent'
cmdl_Reduce [reactionRightSide ::= reactionRightComponent], go to state 5.
cmdl_Shift 'reactionRightSide', go to state 100
cmdl_Shift 'COMMA', go to state 7
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA]
cmdl_Input 'VALUE'
cmdl_Shift 'VALUE'
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA VALUE]
cmdl_Input 'MULTIPLY'
cmdl_Reduce [expression ::= VALUE], go to state 7.
cmdl_Shift 'expression', go to state 64
cmdl_Shift 'MULTIPLY', go to state 44
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA expression MULTIPLY]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA expression MULTIPLY IDENTIFIER]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 44.
cmdl_Shift 'variable', go to state 124
cmdl_Reduce [expression ::= variable], go to state 44.
cmdl_Shift 'expression', go to state 123
cmdl_Reduce [product ::= expression MULTIPLY expression], go to state 7.
cmdl_Shift 'product'
cmdl_Reduce [expression ::= product], go to state 7.
cmdl_Shift 'expression', go to state 64
cmdl_Reduce [reactionSpecifier ::= expression], go to state 7.
cmdl_Shift 'reactionSpecifier'
cmdl_Reduce [reactionSpecifiers ::= reactionSpecifier], go to state 7.
cmdl_Shift 'reactionSpecifiers', go to state 98
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [reaction ::= variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON], go to state 1.
cmdl_Shift 'reaction'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'COMMA', go to state 8
cmdl_Return. Stack=[statements variable COMMA]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA IDENTIFIER]
cmdl_Input 'PLUS'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 8.
cmdl_Shift 'variable', go to state 90
cmdl_Reduce [reactionLeftComponent ::= variable], go to state 8.
cmdl_Shift 'reactionLeftComponent'
cmdl_Reduce [reactionLeftSide ::= reactionLeftComponent], go to state 8.
cmdl_Shift 'reactionLeftSide', go to state 105
cmdl_Shift 'PLUS', go to state 11
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide PLUS]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide PLUS IDENTIFIER]
cmdl_Input 'ARROW'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 11.
cmdl_Shift 'variable', go to state 90
cmdl_Reduce [reactionLeftComponent ::= variable], go to state 11.
cmdl_Shift 'reactionLeftComponent'
cmdl_Reduce [reactionLeftSide ::= reactionLeftSide PLUS reactionLeftComponent], go to state 8.
cmdl_Shift 'reactionLeftSide', go to state 105
cmdl_Shift 'ARROW', go to state 5
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 5.
cmdl_Shift 'variable', go to state 87
cmdl_Reduce [reactionRightComponent ::= variable], go to state 5.
cmdl_Shift 'reactionRightComponent'
cmdl_Reduce [reactionRightSide ::= reactionRightComponent], go to state 5.
cmdl_Shift 'reactionRightSide', go to state 100
cmdl_Shift 'COMMA', go to state 7
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA IDENTIFIER]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 7.
cmdl_Shift 'variable', go to state 99
cmdl_Reduce [expression ::= variable], go to state 7.
cmdl_Shift 'expression', go to state 64
cmdl_Reduce [reactionSpecifier ::= expression], go to state 7.
cmdl_Shift 'reactionSpecifier'
cmdl_Reduce [reactionSpecifiers ::= reactionSpecifier], go to state 7.
cmdl_Shift 'reactionSpecifiers', go to state 98
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [reaction ::= variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON], go to state 1.
cmdl_Shift 'reaction'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'COMMA', go to state 8
cmdl_Return. Stack=[statements variable COMMA]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA IDENTIFIER]
cmdl_Input 'ARROW'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 8.
cmdl_Shift 'variable', go to state 90
cmdl_Reduce [reactionLeftComponent ::= variable], go to state 8.
cmdl_Shift 'reactionLeftComponent'
cmdl_Reduce [reactionLeftSide ::= reactionLeftComponent], go to state 8.
cmdl_Shift 'reactionLeftSide', go to state 105
cmdl_Shift 'ARROW', go to state 5
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW IDENTIFIER]
cmdl_Input 'PLUS'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 5.
cmdl_Shift 'variable', go to state 87
cmdl_Reduce [reactionRightComponent ::= variable], go to state 5.
cmdl_Shift 'reactionRightComponent'
cmdl_Reduce [reactionRightSide ::= reactionRightComponent], go to state 5.
cmdl_Shift 'reactionRightSide', go to state 100
cmdl_Shift 'PLUS', go to state 9
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide PLUS]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide PLUS IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 9.
cmdl_Shift 'variable', go to state 87
cmdl_Reduce [reactionRightComponent ::= variable], go to state 9.
cmdl_Shift 'reactionRightComponent'
cmdl_Reduce [reactionRightSide ::= reactionRightSide PLUS reactionRightComponent], go to state 5.
cmdl_Shift 'reactionRightSide', go to state 100
cmdl_Shift 'COMMA', go to state 7
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA IDENTIFIER]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 7.
cmdl_Shift 'variable', go to state 99
cmdl_Reduce [expression ::= variable], go to state 7.
cmdl_Shift 'expression', go to state 64
cmdl_Reduce [reactionSpecifier ::= expression], go to state 7.
cmdl_Shift 'reactionSpecifier'
cmdl_Reduce [reactionSpecifiers ::= reactionSpecifier], go to state 7.
cmdl_Shift 'reactionSpecifiers', go to state 98
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [reaction ::= variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON], go to state 1.
cmdl_Shift 'reaction'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'COMMA', go to state 8
cmdl_Return. Stack=[statements variable COMMA]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA IDENTIFIER]
cmdl_Input 'PLUS'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 8.
cmdl_Shift 'variable', go to state 90
cmdl_Reduce [reactionLeftComponent ::= variable], go to state 8.
cmdl_Shift 'reactionLeftComponent'
cmdl_Reduce [reactionLeftSide ::= reactionLeftComponent], go to state 8.
cmdl_Shift 'reactionLeftSide', go to state 105
cmdl_Shift 'PLUS', go to state 11
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide PLUS]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide PLUS IDENTIFIER]
cmdl_Input 'ARROW'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 11.
cmdl_Shift 'variable', go to state 90
cmdl_Reduce [reactionLeftComponent ::= variable], go to state 11.
cmdl_Shift 'reactionLeftComponent'
cmdl_Reduce [reactionLeftSide ::= reactionLeftSide PLUS reactionLeftComponent], go to state 8.
cmdl_Shift 'reactionLeftSide', go to state 105
cmdl_Shift 'ARROW', go to state 5
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 5.
cmdl_Shift 'variable', go to state 87
cmdl_Reduce [reactionRightComponent ::= variable], go to state 5.
cmdl_Shift 'reactionRightComponent'
cmdl_Reduce [reactionRightSide ::= reactionRightComponent], go to state 5.
cmdl_Shift 'reactionRightSide', go to state 100
cmdl_Shift 'COMMA', go to state 7
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA IDENTIFIER]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 7.
cmdl_Shift 'variable', go to state 99
cmdl_Reduce [expression ::= variable], go to state 7.
cmdl_Shift 'expression', go to state 64
cmdl_Reduce [reactionSpecifier ::= expression], go to state 7.
cmdl_Shift 'reactionSpecifier'
cmdl_Reduce [reactionSpecifiers ::= reactionSpecifier], go to state 7.
cmdl_Shift 'reactionSpecifiers', go to state 98
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [reaction ::= variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON], go to state 1.
cmdl_Shift 'reaction'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'COMMA', go to state 8
cmdl_Return. Stack=[statements variable COMMA]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA IDENTIFIER]
cmdl_Input 'ARROW'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 8.
cmdl_Shift 'variable', go to state 90
cmdl_Reduce [reactionLeftComponent ::= variable], go to state 8.
cmdl_Shift 'reactionLeftComponent'
cmdl_Reduce [reactionLeftSide ::= reactionLeftComponent], go to state 8.
cmdl_Shift 'reactionLeftSide', go to state 105
cmdl_Shift 'ARROW', go to state 5
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW IDENTIFIER]
cmdl_Input 'PLUS'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 5.
cmdl_Shift 'variable', go to state 87
cmdl_Reduce [reactionRightComponent ::= variable], go to state 5.
cmdl_Shift 'reactionRightComponent'
cmdl_Reduce [reactionRightSide ::= reactionRightComponent], go to state 5.
cmdl_Shift 'reactionRightSide', go to state 100
cmdl_Shift 'PLUS', go to state 9
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide PLUS]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide PLUS IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 9.
cmdl_Shift 'variable', go to state 87
cmdl_Reduce [reactionRightComponent ::= variable], go to state 9.
cmdl_Shift 'reactionRightComponent'
cmdl_Reduce [reactionRightSide ::= reactionRightSide PLUS reactionRightComponent], go to state 5.
cmdl_Shift 'reactionRightSide', go to state 100
cmdl_Shift 'COMMA', go to state 7
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA IDENTIFIER]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 7.
cmdl_Shift 'variable', go to state 99
cmdl_Reduce [expression ::= variable], go to state 7.
cmdl_Shift 'expression', go to state 64
cmdl_Reduce [reactionSpecifier ::= expression], go to state 7.
cmdl_Shift 'reactionSpecifier'
cmdl_Reduce [reactionSpecifiers ::= reactionSpecifier], go to state 7.
cmdl_Shift 'reactionSpecifiers', go to state 98
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [reaction ::= variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON], go to state 1.
cmdl_Shift 'reaction'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'COMMA', go to state 8
cmdl_Return. Stack=[statements variable COMMA]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA IDENTIFIER]
cmdl_Input 'PLUS'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 8.
cmdl_Shift 'variable', go to state 90
cmdl_Reduce [reactionLeftComponent ::= variable], go to state 8.
cmdl_Shift 'reactionLeftComponent'
cmdl_Reduce [reactionLeftSide ::= reactionLeftComponent], go to state 8.
cmdl_Shift 'reactionLeftSide', go to state 105
cmdl_Shift 'PLUS', go to state 11
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide PLUS]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide PLUS IDENTIFIER]
cmdl_Input 'ARROW'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 11.
cmdl_Shift 'variable', go to state 90
cmdl_Reduce [reactionLeftComponent ::= variable], go to state 11.
cmdl_Shift 'reactionLeftComponent'
cmdl_Reduce [reactionLeftSide ::= reactionLeftSide PLUS reactionLeftComponent], go to state 8.
cmdl_Shift 'reactionLeftSide', go to state 105
cmdl_Shift 'ARROW', go to state 5
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 5.
cmdl_Shift 'variable', go to state 87
cmdl_Reduce [reactionRightComponent ::= variable], go to state 5.
cmdl_Shift 'reactionRightComponent'
cmdl_Reduce [reactionRightSide ::= reactionRightComponent], go to state 5.
cmdl_Shift 'reactionRightSide', go to state 100
cmdl_Shift 'COMMA', go to state 7
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA IDENTIFIER]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 7.
cmdl_Shift 'variable', go to state 99
cmdl_Reduce [expression ::= variable], go to state 7.
cmdl_Shift 'expression', go to state 64
cmdl_Reduce [reactionSpecifier ::= expression], go to state 7.
cmdl_Shift 'reactionSpecifier'
cmdl_Reduce [reactionSpecifiers ::= reactionSpecifier], go to state 7.
cmdl_Shift 'reactionSpecifiers', go to state 98
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON]
cmdl_Input 'IDENTIFIER'
cmdl_Reduce [reaction ::= variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON], go to state 1.
cmdl_Shift 'reaction'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 1.
cmdl_Shift 'variable', go to state 88
cmdl_Shift 'COMMA', go to state 8
cmdl_Return. Stack=[statements variable COMMA]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA IDENTIFIER]
cmdl_Input 'ARROW'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 8.
cmdl_Shift 'variable', go to state 90
cmdl_Reduce [reactionLeftComponent ::= variable], go to state 8.
cmdl_Shift 'reactionLeftComponent'
cmdl_Reduce [reactionLeftSide ::= reactionLeftComponent], go to state 8.
cmdl_Shift 'reactionLeftSide', go to state 105
cmdl_Shift 'ARROW', go to state 5
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW IDENTIFIER]
cmdl_Input 'PLUS'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 5.
cmdl_Shift 'variable', go to state 87
cmdl_Reduce [reactionRightComponent ::= variable], go to state 5.
cmdl_Shift 'reactionRightComponent'
cmdl_Reduce [reactionRightSide ::= reactionRightComponent], go to state 5.
cmdl_Shift 'reactionRightSide', go to state 100
cmdl_Shift 'PLUS', go to state 9
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide PLUS]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide PLUS IDENTIFIER]
cmdl_Input 'COMMA'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 9.
cmdl_Shift 'variable', go to state 87
cmdl_Reduce [reactionRightComponent ::= variable], go to state 9.
cmdl_Shift 'reactionRightComponent'
cmdl_Reduce [reactionRightSide ::= reactionRightSide PLUS reactionRightComponent], go to state 5.
cmdl_Shift 'reactionRightSide', go to state 100
cmdl_Shift 'COMMA', go to state 7
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA]
cmdl_Input 'IDENTIFIER'
cmdl_Shift 'IDENTIFIER', go to state 125
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA IDENTIFIER]
cmdl_Input 'SEMICOLON'
cmdl_Reduce [variable ::= IDENTIFIER], go to state 7.
cmdl_Shift 'variable', go to state 99
cmdl_Reduce [expression ::= variable], go to state 7.
cmdl_Shift 'expression', go to state 64
cmdl_Reduce [reactionSpecifier ::= expression], go to state 7.
cmdl_Shift 'reactionSpecifier'
cmdl_Reduce [reactionSpecifiers ::= reactionSpecifier], go to state 7.
cmdl_Shift 'reactionSpecifiers', go to state 98
cmdl_Shift 'SEMICOLON'
cmdl_Return. Stack=[statements variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON]
cmdl_Input '$'
cmdl_Reduce [reaction ::= variable COMMA reactionLeftSide ARROW reactionRightSide COMMA reactionSpecifiers SEMICOLON], go to state 1.
cmdl_Shift 'reaction'
cmdl_Reduce [statements ::= statements statement], go to state 0.
cmdl_Shift 'statements', go to state 1
cmdl_Reduce [model ::= statements], go to state 0.
cmdl_Accept!
cmdl_Return. Stack=]
